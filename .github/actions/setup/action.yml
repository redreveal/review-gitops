name: Setup Environment
description: Checkout repositories, install dependencies, and generate regions_envs.json file
inputs:
  env_type:
    description: 'Environment type (prod, dev, uat)'
    required: true
  repo_token:
    description: 'GitHub token for accessing private repositories'
    required: true
  review_gitops_path:
    description: 'Path to the Review GitOps repository'
    required: true
  terraform_repo_path:
    description: 'Path to the Terraform repository'
    required: true
  argocd_gitops_path:
    description: 'Path to the ArgoCD GitOps repository'
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout Review-GitOps
      uses: actions/checkout@v2
      with:
        repository: redreveal/review-gitops
        token: ${{ inputs.repo_token }}
        path: review-gitops

    - name: Checkout Terraform Repo
      uses: actions/checkout@v2
      with:
        repository: redreveal/red-terraform
        token: ${{ inputs.repo_token }}
        path: ${{ inputs.terraform_repo_path }}

    - name: Checkout ArgoCD-GitOps Repo
      uses: actions/checkout@v2
      with:
        repository: redreveal/argocd-gitops-versions
        token: ${{ inputs.repo_token }}
        path: ${{ inputs.argocd_gitops_path }}

    - name: Install yq, jq, and Helm
      run: |
        sudo wget https://github.com/mikefarah/yq/releases/download/v4.6.1/yq_linux_amd64 -O /usr/bin/yq
        sudo chmod +x /usr/bin/yq
        sudo apt-get install -y jq
        curl -sSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      shell: bash

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml
      shell: bash

    - name: Generate regions_envs.json
      uses: actions/github-script@v5
      with:
        script: |
          const payload = context.payload;
          const repo = context.repo;
          let base, head;
      
          // Determine the base and head commits
          if (payload.pull_request) {
            base = payload.pull_request.base.sha;
            head = payload.pull_request.head.sha;
          } else {
            base = payload.before;
            head = payload.after;
          }
      
          // Fetch the comparison between the base and head commits
          const compare = await github.rest.repos.compareCommits({
            owner: repo.owner,
            repo: repo.repo,
            base: base,
            head: head
          });
      
          const regions_envs = [];
          compare.data.files.forEach(file => {
            if (file.filename.startsWith('dev/')) {
              let env = 'dev';
              let region = file.filename.split('/')[1];
              regions_envs.push({region, env, branch: env === 'prod' ? 'production' : env === 'dev' ? 'develop' : 'uat'});
            }
          });

          const fs = require('fs');
          fs.writeFileSync('regions_envs.json', JSON.stringify(regions_envs));
          console.log(`Regions and Environments for ${{ inputs.env_type }}: ${JSON.stringify(regions_envs)}`);
