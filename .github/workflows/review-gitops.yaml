name: Review-GitOps Workflow

on:
  push:
    branches:
      - main
  repository_dispatch:
    types: [update-argocd]

jobs:
  update-argocd:
    runs-on: ubuntu-latest

    steps:
    - name: Extract Client Payload
      id: extract_payload
      run: echo "::set-output name=branch::${{ github.event.client_payload.branch }}"

    - name: Checkout Review-GitOps
      uses: actions/checkout@v2

    - name: Checkout Terraform Repo
      uses: actions/checkout@v2
      with:
        repository: redreveal/red-terraform
        token: ${{ secrets.TOKEN }}
        ref: main
        path: terraform

    - name: Extract MSA Numbers
      run: |
        grep 'module.MSA' terraform/main.tf | egrep -o '[0-9]+' | sort -u > msa_numbers.txt

    - name: Checkout ArgoCD-GitOps
      uses: actions/checkout@v2
      with:
        repository: redreveal/argocd-gitops-versions
        token: ${{ secrets.TOKEN }}
        path: argocd-gitops

    - name: Determine Directory
      id: determine-directory
      run: |
        BRANCH_NAME="${{ steps.extract_payload.outputs.branch }}"
        echo "Branch Name: $BRANCH_NAME"
        if [[ "$BRANCH_NAME" == "develop" ]]; then
          echo "dir=argocd-gitops/dev/us-east-1" >> $GITHUB_ENV
        elif [[ "$BRANCH_NAME" == "staging" ]]; then
          echo "dir=argocd-gitops/uat/eu-west-1" >> $GITHUB_ENV
        elif [[ "$BRANCH_NAME" == "production" ]]; then
          echo "dir=argocd-gitops/prod/us-east-1" >> $GITHUB_ENV
          echo "dir2=argocd-gitops/prod/us-west-1" >> $GITHUB_ENV
        fi
        echo "Directory: ${{ env.dir }}"
        echo "Directory2: ${{ env.dir2 }}"

    - name: Create/Update YAML Files in ArgoCD-GitOps
      run: |
        MSAS=$(cat msa_numbers.txt)
        for MSA in $MSAS; do
          echo "Processing MSA $MSA"
          DIRECTORY="${{ env.dir }}"
          FILE="$DIRECTORY/$MSA.yaml"

          if [ -z "$DIRECTORY" ]; then
            echo "Error: DIRECTORY is not set"
            exit 1
          fi

          # Ensure the directory exists
          mkdir -p $DIRECTORY

          # Check for MSA overrides in review-gitops
          if grep -q "$MSA" review-gitops/dev/us-east-1/versions.yaml; then
            OVERRIDE_VERSION=$(grep "$MSA" review-gitops/dev/us-east-1/versions.yaml | awk '{print $2}')
            echo "default_all: 2024.7.29\nmsas:\n   $MSA:\n          search: $OVERRIDE_VERSION" > $FILE
          else
            ln -sf argocd-gitops/default.yaml $FILE
          fi

          if [ -n "${{ env.dir2 }}" ]; then
            DIRECTORY="${{ env.dir2 }}"
            FILE="$DIRECTORY/$MSA.yaml"
            mkdir -p $DIRECTORY
            if grep -q "$MSA" review-gitops/dev/us-east-1/versions.yaml; then
              OVERRIDE_VERSION=$(grep "$MSA" review-gitops/dev/us-east-1/versions.yaml | awk '{print $2}')
              echo "default_all: 2024.7.29\nmsas:\n   $MSA:\n          search: $OVERRIDE_VERSION" > $FILE
            else
              ln -sf argocd-gitops/default.yaml $FILE
            fi
          fi
        done


    - name: Commit and Push
      run: |
        cd argocd-gitops
        git config user.email "rberisha@revealdata.com"
        git config user.name "Redon Berisha"
        git add .
        git commit -m "Updated YAML files for new MSAs"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
