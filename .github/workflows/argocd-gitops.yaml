name: Review-GitOps Manual Modifications

on:
  push:
    branches:
      - main

jobs:
  update-argocd:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Review-GitOps
      uses: actions/checkout@v2

    - name: Determine Directory and Branch
      id: determine-directory
      run: |
        CHANGED_DIR=$(git diff --name-only HEAD~1 HEAD | grep -E 'dev/us-east-1|uat/eu-west-1|prod/us-east-1|prod/us-west-1' | head -1)
        echo "Changed Directory: $CHANGED_DIR"
        if [[ "$CHANGED_DIR" == dev/us-east-1* ]]; then
          echo "region=us-east-1" >> $GITHUB_ENV
          echo "env=dev" >> $GITHUB_ENV
          echo "branch=develop" >> $GITHUB_ENV
        elif [[ "$CHANGED_DIR" == uat/eu-west-1* ]]; then
          echo "region=eu-west-1" >> $GITHUB_ENV
          echo "env=uat" >> $GITHUB_ENV
          echo "branch=staging" >> $GITHUB_ENV
        elif [[ "$CHANGED_DIR" == prod/us-east-1* ]]; then
          echo "region=us-east-1" >> $GITHUB_ENV
          echo "env=prod" >> $GITHUB_ENV
          echo "branch=production" >> $GITHUB_ENV
        elif [[ "$CHANGED_DIR" == prod/us-west-1* ]]; then
          echo "region=us-west-1" >> $GITHUB_ENV
          echo "env=prod" >> $GITHUB_ENV
          echo "branch=production" >> $GITHUB_ENV
        fi
        echo "Region: ${{ env.region }}"
        echo "Environment: ${{ env.env }}"
        echo "Branch: ${{ env.branch }}"

    - name: Checkout and Update Terraform Repo
      uses: actions/checkout@v2
      with:
        repository: redreveal/red-terraform
        token: ${{ secrets.TOKEN }}
        path: terraform

    - name: Update Terraform Repo to Latest
      run: |
        cd terraform
        git fetch origin
        git checkout ${{ env.branch }}
        git pull origin ${{ env.branch }}

    - name: Extract MSA Numbers
      run: |
        grep 'module.MSA' terraform/main.tf | egrep -o '[0-9]+' | sort -u > msa_numbers.txt

    - name: Install yq
      run: |
        sudo wget https://github.com/mikefarah/yq/releases/download/v4.6.1/yq_linux_amd64 -O /usr/bin/yq
        sudo chmod +x /usr/bin/yq

    - name: Checkout ArgoCD-GitOps Repo
      uses: actions/checkout@v2
      with:
        repository: redreveal/argocd-gitops-versions
        token: ${{ secrets.TOKEN }}
        path: argocd-gitops

    - name: Create/Update YAML Files in ArgoCD-GitOps
      run: |
        MSAS=$(cat msa_numbers.txt)
        for MSA in $MSAS; do
          echo "Processing MSA $MSA"
          DIRECTORY="argocd-gitops/review/${{ env.env }}/${{ env.region }}"
          FILE="$DIRECTORY/$MSA.yaml"
          VERSIONS_FILE="review-gitops/review/${{ env.env }}/${{ env.region }}/versions.yaml"

          if [ -z "$DIRECTORY" ]; then
            echo "Error: DIRECTORY is not set"
            exit 1
          fi

          # Ensure the directory exists
          mkdir -p $DIRECTORY

          # Create a default versions.yaml if it doesn't exist
          if [ ! -f $VERSIONS_FILE ]; then
            mkdir -p $(dirname $VERSIONS_FILE)
            echo "default_all: 2024.7.29" > $VERSIONS_FILE
          fi

          echo "Checking for overrides in $VERSIONS_FILE"
          OVERRIDES=$(yq e ".msas.$MSA" $VERSIONS_FILE)
          if [ "$OVERRIDES" != "null" ]; then
            echo "Overrides found for MSA $MSA: $OVERRIDES"
            OVERRIDES_FORMATTED=$(echo "$OVERRIDES" | sed 's/^/    /')
            echo -e "default_all: 2024.7.29\nmsas:\n  $MSA:\n$OVERRIDES_FORMATTED" > $FILE
          else
            echo "No overrides found for MSA $MSA, creating symlink to versions.yaml"
            ln -sf versions.yaml $FILE
          fi
        done

    - name: Commit and Push
      run: |
        cd argocd-gitops
        git config user.email "rberisha@revealdata.com"
        git config user.name "Redon Berisha"
        git commit -m "Updated from Review-GitOps" || echo "No changes to commit"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
