name: Review-GitOps Manual Modifications

on:
  push:
    branches:
      - main

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      prod_changed: ${{ steps.determine-env.outputs.prod_changed }}
      non_prod_changed: ${{ steps.determine-env.outputs.non_prod_changed }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Determine Environment Based on Modified Files
        id: determine-env
        uses: actions/github-script@v5
        with:
          script: |
            const payload = context.payload;
            const repo = context.repo;
            let base, head;

            if (payload.pull_request) {
              base = payload.pull_request.base.sha;
              head = payload.pull_request.head.sha;
            } else {
              base = payload.before;
              head = payload.after;
            }

            const compare = await github.rest.repos.compareCommits({
              owner: repo.owner,
              repo: repo.repo,
              base: base,
              head: head
            });

            let prod_changed = false;
            let non_prod_changed = false;

            compare.data.files.forEach(file => {
              if (file.filename.startsWith('prod/')) {
                prod_changed = true;
              } else if (file.filename.startsWith('dev/') || file.filename.startsWith('uat/')) {
                non_prod_changed = true;
              }
            });

            core.setOutput('prod_changed', prod_changed);
            core.setOutput('non_prod_changed', non_prod_changed);

  process-values-production:
    needs: determine-environment
    if: needs.determine-environment.outputs.prod_changed == 'true'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Production Environment
        uses: ./.github/actions/setup
        with:
          env_type: 'prod'
          repo_token: ${{ secrets.TOKEN }}
          review_gitops_path: 'review-gitops'
          terraform_repo_path: 'terraform'
          argocd_gitops_path: 'argocd-gitops'

      - name: Process Production Values
        uses: ./.github/actions/process-values
        with:
          env_type: 'prod'
          regions_envs_file: 'regions_envs.json'
          msa_numbers_prefix: 'msa_numbers'
          gitops_repo_path: 'argocd-gitops'
          terraform_repo_path: 'terraform'
          review_gitops_path: 'review-gitops'

  process-values-dev-uat:
    needs: determine-environment
    if: needs.determine-environment.outputs.non_prod_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Dev/UAT Environment
        uses: ./.github/actions/setup
        with:
          env_type: 'dev-uat'
          repo_token: ${{ secrets.TOKEN }}
          review_gitops_path: 'review-gitops'
          terraform_repo_path: 'terraform'
          argocd_gitops_path: 'argocd-gitops'

      - name: Process Dev/UAT Values
        uses: ./.github/actions/process-values
        with:
          env_type: 'dev-uat'
          regions_envs_file: 'regions_envs.json'
          msa_numbers_prefix: 'msa_numbers'
          gitops_repo_path: 'argocd-gitops'
          terraform_repo_path: 'terraform'
          review_gitops_path: 'review-gitops'
